name: Desktop app
on:
  release:
    types: [published]

env:
  GITLAB_REKONO_ID: 45783845
  GITLAB_KALI_FORK_ID: 48406619

jobs:
  docker-image:
    name: Docker Image
    runs-on: ubuntu-latest
    environment: docker-hub
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      
      - name: Install dependencies
        working-directory: rekono/frontend
        run: npm install .

      - name: Configure Rekono backend
        working-directory: rekono/frontend
        run: echo "VUE_APP_DESKTOP_BACKEND_URL=http://127.0.0.1:8000" > .env.production
      
      - name: Generate Desktop UI
        working-directory: rekono/frontend
        run: npm run electron:build
      
      - name: Build Docker image
        run: docker build --build-arg REKONO_VERSION=${{ github.event.release.name }} --file docker/debian/Dockerfile --tag ${{ secrets.DOCKER_USER }}/rekono:${{ github.event.release.name }} .

      - name: Publish Docker image in Docker Hub
        run: |
          docker tag ${{ secrets.DOCKER_USER }}/rekono:${{ github.event.release.name }} ${{ secrets.DOCKER_USER }}/rekono:latest
          docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_TOKEN }}
          docker push ${{ secrets.DOCKER_USER }}/rekono:${{ github.event.release.name }}
          docker push ${{ secrets.DOCKER_USER }}/rekono:latest
          docker logout

  debian-package:
    name: Debian Package
    strategy:
      fail-fast: false
      matrix:
        include:
          - git-add-files: .
            source-proect-id: ${{ env.GITLAB_REKONO_ID }}
            source-branch: release/${{ github.event.release.name }}
            target-project-id: ${{ env.GITLAB_REKONO_ID }}
            target-branch: kali/master
          - git-add-files: rekono
            source-project-id: ${{ env.GITLAB_REKONO_ID }}
            source-branch: kali-release/${{ github.event.release.name }}
            target-project-id: ${{ env.GITLAB_KALI_FORK_ID }}
            target-branch: kali/master
    runs-on: ubuntu-latest
    environment: gitlab
    needs: docker-image
    steps:
      - name: Checkout GitLab repository
        run: git clone https://gitlab.com/pablosnt/rekono.git rekono-deb

      - name: Update rekono executable
        working-directory: rekono-deb
        run: |
          echo '#!/bin/sh' > rekono
          echo 'exec kaboxer run --component default --version ${{ github.event.release.name }} rekono -- "$@"' >> rekono

      - name: Update debian/changelog
        working-directory: rekono-deb/debian
        shell: python
        run: |
          import pytz
          from datetime import datetime
          with open('changelog', 'r') as changelog:
            old_changes = changelog.read()
          tz = pytz.timezone('Europe/Madrid')
          d = tz.localize(datetime.now())
          change_time = d.strftime('%a, %d %b %Y %H:%M:%S %z')
          new_changes = f'rekono-kbx (${{ github.event.release.name }}) kali-dev; urgency=medium\n\n  * Update Rekono version to ${{ github.event.release.name }}.\n\n -- Pablo Santiago López <${{ secrets.GITLAB_EMAIL }}>  {change_time}\n\n'
          with open('changelog', 'w') as changelog:
            changelog.write(new_changes + old_changes)
      
      - name: Commit changes to GitLab
        working-directory: rekono-deb
        run: |
          git config user.name 'Pablo Santiago'
          git config user.email '${{ secrets.GITLAB_EMAIL }}'
          git checkout -b ${{ matrix.source-branch }}
          git add ${{ matrix.git-add-files }}
          git commit -m "Update Rekono version to ${{ github.event.release.name }}"
          git config credential.helper '!f() { sleep 1; echo "username=${{ secrets.GITLAB_USER }}"; echo "password=${{ secrets.GITLAB_TOKEN }}"; }; f'
          git push --set-upstream origin ${{ matrix.source-branch }}
      
      - name: GitLab merge request
        shell: python
        run: |
          import requests
          headers = {
            'PRIVATE-TOKEN': '${{ secrets.GITLAB_TOKEN }}'
          }
          data = {
            'title': 'Update Rekono version to ${{ github.event.release.name }}',
            'source_project_id': ${{ matrix.source-project-id }},
            'source_branch': '${{ matrix.source-branch }}',
            'target_project_id': ${{ matrix.target-project-id }},
            'target_branch': '${{ matrix.target-branch }}'
          }
          response = requests.post('https://gitlab.com/api/v4/projects/${{ matrix.target-project-id }}/merge_requests', data=data, headers=headers)
          if response.status_code != 201:
            print(response.text)
          assert(response.status_code == 201)
